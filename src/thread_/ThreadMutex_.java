package thread_;

public class ThreadMutex_ {

//    互斥锁
//    1.Java语言中，引入了对象互斥锁的概念，来保证共享数据操作的完整性。
//    2.每个对象都对应于一个可称为“互斥锁”的标记，这个标记用来保证在任一时刻，只能有一个线程访问该对象。
//    3.关键字 synchronized 来与对象的互斥锁联系。当某个对象用 synchronized 修饰时表明该对象在任一时刻只能由一个线程访问
//    4.同步的局限性:导致程序的执行效率要降低
//    5.同步方法(非静态的)的锁可以是this,也可以是其他对象(要求是同一个对象)
//    6.同步方法(静态的)的锁为当前类本身。

    public static void main(String[] args) {

    }
}
